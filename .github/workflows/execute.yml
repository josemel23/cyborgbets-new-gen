name: Ejecutar Scraper o Deploy

on:
  workflow_dispatch:
    inputs:
      accion:
        description: 'Acción a ejecutar (scraper o deploy)'
        required: true
        type: choice
        options:
          - scraper
          - deploy
      liga:
        description: 'Nombre del scraper (opcional para deploy)'
        required: false
        type: string

jobs:
  ejecutar:
    runs-on: ubuntu-latest
    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configurar Python
        if: github.event.inputs.accion == 'scraper'
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Instalar dependencias Python
        if: github.event.inputs.accion == 'scraper'
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 lxml selenium pandas openpyxl

      - name: Debug - Mostrar estructura
        if: github.event.inputs.accion == 'scraper'
        run: |
          echo "🔍 Estructura del repositorio:"
          find . -name "*.py" -type f | head -20
          echo "🎯 Buscando scraper para: ${{ github.event.inputs.liga }}"
          echo "📂 Contenido del directorio scraper:"
          ls -la scraper/ || echo "Directorio scraper no encontrado"
          if [ -d "scraper/${{ github.event.inputs.liga }}" ]; then
            echo "📂 Contenido de scraper/${{ github.event.inputs.liga }}:"
            ls -la "scraper/${{ github.event.inputs.liga }}/"
          fi

      - name: Ejecutar Scraper
        if: github.event.inputs.accion == 'scraper'
        run: |
          echo "🕷️ Ejecutando scraper: ${{ github.event.inputs.liga }}"
          
          # BUSCAR EN MÚLTIPLES UBICACIONES POSIBLES
          if [ -f "scraper/${{ github.event.inputs.liga }}/${{ github.event.inputs.liga }}_standings.py" ]; then
            echo "✅ Encontrado en: scraper/${{ github.event.inputs.liga }}/${{ github.event.inputs.liga }}_standings.py"
            cd "scraper/${{ github.event.inputs.liga }}"
            python "${{ github.event.inputs.liga }}_standings.py"
          elif [ -f "scraper/${{ github.event.inputs.liga }}/${{ github.event.inputs.liga }}_standigs.py" ]; then
            echo "✅ Encontrado en: scraper/${{ github.event.inputs.liga }}/${{ github.event.inputs.liga }}_standigs.py (typo en nombre)"
            cd "scraper/${{ github.event.inputs.liga }}"
            python "${{ github.event.inputs.liga }}_standigs.py"
          elif [ -f "scrapers/${{ github.event.inputs.liga }}/${{ github.event.inputs.liga }}_standings.py" ]; then
            echo "✅ Encontrado en: scrapers/${{ github.event.inputs.liga }}/${{ github.event.inputs.liga }}_standings.py"
            cd "scrapers/${{ github.event.inputs.liga }}"
            python "${{ github.event.inputs.liga }}_standings.py"
          elif [ -f "scrapers/${{ github.event.inputs.liga }}.py" ]; then
            echo "✅ Encontrado en: scrapers/${{ github.event.inputs.liga }}.py"
            cd scrapers
            python "${{ github.event.inputs.liga }}.py"
          else
            echo "❌ Error: No se encontró el scraper para ${{ github.event.inputs.liga }}"
            echo "📁 Ubicaciones buscadas:"
            echo "  - scraper/${{ github.event.inputs.liga }}/${{ github.event.inputs.liga }}_standings.py"
            echo "  - scraper/${{ github.event.inputs.liga }}/${{ github.event.inputs.liga }}_standigs.py"
            echo "  - scrapers/${{ github.event.inputs.liga }}/${{ github.event.inputs.liga }}_standings.py"
            echo "  - scrapers/${{ github.event.inputs.liga }}.py"
            echo ""
            echo "📂 Archivos Python encontrados:"
            find . -name "*.py" -type f
            echo ""
            echo "📂 Estructura completa del directorio scraper:"
            find scraper/ -type f 2>/dev/null || echo "Directorio scraper no existe"
            exit 1
          fi

      - name: Verificar archivos generados
        if: github.event.inputs.accion == 'scraper'
        run: |
          echo "📁 Archivos JSON encontrados:"
          find . -name "*.json" -type f -ls 2>/dev/null || echo "No se encontraron archivos JSON"
          echo "📁 Estado de git:"
          git status

      - name: Commit y Push cambios
        if: github.event.inputs.accion == 'scraper'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Agregar todos los archivos
          git add .
          
          # Verificar si hay cambios para commitear
          if git diff --staged --quiet; then
            echo "ℹ️ No hay cambios para commitear"
          else
            echo "📝 Commiteando cambios..."
            git commit -m "🤖 Actualizar datos de ${{ github.event.inputs.liga }} - $(date '+%Y-%m-%d %H:%M:%S')"
            git push
            echo "✅ Cambios guardados en GitHub"
          fi

      - name: Configurar Node.js
        if: github.event.inputs.accion == 'deploy'
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Instalar Firebase CLI
        if: github.event.inputs.accion == 'deploy'
        run: |
          npm install -g firebase-tools
          echo "🔧 Firebase CLI instalado"

      - name: Deploy a Firebase
        if: github.event.inputs.accion == 'deploy'
        run: |
          echo "🚀 Iniciando deploy a Firebase..."
          firebase deploy --token "$FIREBASE_TOKEN" --non-interactive
          echo "✅ Deploy completado correctamente"
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      - name: Mostrar resultado
        run: |
          if [ "${{ github.event.inputs.accion }}" == "scraper" ]; then
            echo "🎯 Scraper '${{ github.event.inputs.liga }}' ejecutado con éxito"
            echo "📋 Los archivos han sido guardados en GitHub"
          elif [ "${{ github.event.inputs.accion }}" == "deploy" ]; then
            echo "🎯 Deploy a Firebase completado con éxito"
          fi
